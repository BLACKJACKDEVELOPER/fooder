import {
  useRef,
  useEffect,
  useState
} from 'react';
import { useNavigate } from 'react-router-dom'

import './App.css';
import {
  Button,
  Input,
  Carousel,
  Pagination,
  Cascader,
  Message
} from "@arco-design/web-react";
import Products from "./components/Products.jsx"
function App() {
  const Link = useNavigate()
  const options = [
    {
      value: '‡∏Å‡∏≤‡πÅ‡∏ü',
      label: '‡∏Å‡∏≤‡πÅ‡∏ü',
      children: [
        {
          value: '‡∏£‡πâ‡∏≠‡∏ô',
          label: '‡∏£‡πâ‡∏≠‡∏ô',
          children: [
            {
              value: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà',
              label: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà',
            },
            {
              value: '‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á',
              label: '‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á',
            },
            {
              value: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å',
              label: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å',
            }
          ],
        }, {
          value: '‡πÄ‡∏¢‡πá‡∏ô',
          label: '‡πÄ‡∏¢‡πá‡∏ô',
          children: [
            {
              value: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà',
              label: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà',
            },
            {
              value: '‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á',
              label: '‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á',
            },
            {
              value: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å',
              label: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å',
            }
          ]
        }
      ],
    },
    {
      value: '‡∏Å‡πã‡∏ß‡∏¢‡πÄ‡∏ï‡∏µ‡πã‡∏¢‡∏ß',
      label: '‡∏Å‡πã‡∏ß‡∏¢‡πÄ‡∏ï‡∏µ‡πã‡∏¢‡∏ß',
      children: [
        {
          value: '‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å',
          label: '‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏•‡πá‡∏Å',
          children: [
            {
              value: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å',
              label: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å',
            },
            {
              value: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™',
              label: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™',
            }, {
              value: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥',
              label: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥'
            }
          ],
        }, {
          value: '‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏´‡∏ç‡πà',
          label: '‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏´‡∏ç‡πà',
          children: [
            {
              value: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å',
              label: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å'
            },
            {
              value: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™',
              label: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™'
            },
            {
              value: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥',
              label: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥'
            }
          ]
        },
        {
          value: '‡πÄ‡∏™‡πâ‡∏ô‡∏´‡∏°‡∏µ‡πà',
          label: '‡πÄ‡∏™‡πâ‡∏ô‡∏´‡∏°‡∏µ‡πà',
          children: [
            {
              value: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å',
              label: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å'
            },
            {
              value: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™',
              label: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™'
            },
            {
              value: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥',
              label: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥'
            }
          ]
        },
        {
          value: '‡∏´‡∏°‡∏µ‡πà‡∏´‡∏¢‡∏Å',
          label: '‡∏´‡∏°‡∏µ‡πà‡∏´‡∏¢‡∏Å',
          children: [
            {
              value: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å',
              label: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å'
            },
            {
              value: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™',
              label: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™'
            },
            {
              value: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥',
              label: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥'
            }
          ]
        },
        {
          value: '‡∏°‡∏≤‡∏°‡πà‡∏≤',
          label: '‡∏°‡∏≤‡∏°‡πà‡∏≤',
          children: [
            {
              value: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å',
              label: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å'
            },
            {
              value: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™',
              label: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™'
            },
            {
              value: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥',
              label: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥'
            }
          ]
        },
        {
          value: '‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô',
          label: '‡∏ß‡∏∏‡πâ‡∏ô‡πÄ‡∏™‡πâ‡∏ô',
          children: [
            {
              value: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å',
              label: '‡∏ô‡πâ‡∏≥‡∏ï‡∏Å'
            },
            {
              value: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™',
              label: '‡∏ô‡πâ‡∏≥‡πÉ‡∏™'
            },
            {
              value: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥',
              label: '‡∏ï‡πâ‡∏°‡∏¢‡∏≥'
            }
          ]
        }
      ],
    },
  ];
  const Slides = [
    '/slides/1.jpg',
    '/slides/2.jpg',
    '/slides/3.jpg',
    '/slides/4.jpg',
    '/slides/5.jpg',
    '/slides/6.jpg'
  ]

  // referrece to element for searching
  const search = useRef(null)
  // Got text search and goto query data
  function Search() {
    search.current.dom.value ? Link('/search?query='+search.current.dom.value) : Message.error('Please typing any text for search...')
  }

  // pre data
  const [data,setData] = useState([])
  // pulling data
  useEffect(()=> {
    Message.loading({
      id:'loading',
      content:'requesting data...'
    })
    fetch('https://www.themealdb.com/api/json/v1/1/search.php?f=p')
    .then(res=> res.json()).then(res=> {
      setData(res.meals)
      Message.success({
        id:'loading',
        content:'Successfully'
      })
    })
  },[])

  return (<>

    <div>
      <Carousel
        style={{ width: "100%", height: 550 }}
        autoPlay={true}
        moveSpeed={200}
        className="slides"
      >
        {Slides.map((img, index) =>
          <div key={index}>
            <img src={img} alt=""
              className="slideImg"
              style={{ width: "100%" }} />
          </div>
        )}
      </Carousel>
    </div>

    <div className="search">
      <div className="searchIcon">
        <img src="/Icons/Search.png" alt="" />
      </div>
      <Input ref={search}></Input>
      <Button onClick={()=> {Search();window.scrollTo(0, document.body.scrollHeight * -1)}} shape="round" type="primary">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</Button>
    </div>

    <div className="promotion">
      <div className="promotionTitle">
        <h1> ü§ë ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡∏π‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏Å‡∏ï‡πâ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</h1>
        <div className="optionals">
          <Cascader
            addBefore='‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó'
            placeholder='‡πÑ‡∏°‡πà‡∏°‡∏µ'
            expandTrigger='hover'
            style={{ width: 300 }}
            options={options}
            size="large"
            allowClear
          />
          <Pagination size="large" total={200} simple />
        </div>
      </div>
      <Products amount={52} data={data} />
    </div>
  </>);
}

export default App;
